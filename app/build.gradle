buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
//noinspection GradleDependency
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    signingConfigs {
        config {
            keyAlias 'key0'
            keyPassword 'masahirosakurai'
            storeFile file('/home/akench/keystores/sakaiapp.jks')
            storePassword 'MasahiroSakurai123'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        applicationId "com.sakaimobile.development.sakaiclient20"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 4
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    buildToolsVersion '28.0.3'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // UI libraries/SDKs
    def support_lib_version = "28.0.0"
    implementation "com.android.support:appcompat-v7:$support_lib_version"
    implementation "com.android.support:preference-v7:$support_lib_version"
    implementation "com.android.support:design:$support_lib_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "com.android.support:support-vector-drawable:$support_lib_version"
    implementation "com.android.support:recyclerview-v7:$support_lib_version"
    implementation "com.android.support:cardview-v7:$support_lib_version"
    implementation "com.android.support:support-v4:$support_lib_version"

    // ViewModel/LiveData dependencies
    def lifecycle_version = "1.1.1"
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    implementation "android.arch.lifecycle:viewmodel:$lifecycle_version"

    // Dependency injection with Dagger
    def dagger_version = "2.15"
    implementation "com.google.dagger:dagger:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"

    // Android-specific Dagger libraries
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"

    // RxJava2 and RxAndroid
    api 'io.reactivex.rxjava2:rxjava:2.2.0'
    api 'io.reactivex.rxjava2:rxandroid:2.0.1'

    //Retrofit is used for network requests
    api 'com.squareup.retrofit2:retrofit:2.4.0'
    api 'com.squareup.retrofit2:converter-gson:2.3.0'
    api 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    //OkHttp allows us to create interceptors for the requests
    api 'com.squareup.okhttp3:okhttp:3.10.0'

    //Using the Gson converter factory to convert JSON to POJOs
    api 'com.google.code.gson:gson:2.8.4'
    api 'com.squareup.retrofit2:converter-gson:2.3.0'

    //Common-Lang3 is used for toString of POJOs
    api 'org.apache.commons:commons-lang3:3.6'

    //Android TreeView library for generating tree-like structures
    api 'com.github.bmelnychuk:atv:1.2.9'

    // Room local database
    def room_version = "1.1.1"
    implementation "android.arch.persistence.room:runtime:$room_version"
    annotationProcessor "android.arch.persistence.room:compiler:$room_version"
    // RxJava support for Room
    implementation "android.arch.persistence.room:rxjava2:$room_version"
    // Test helpers for Room
    testImplementation "android.arch.persistence.room:testing:$room_version"

    def work_version = "1.0.0-beta01"
    implementation "android.arch.work:work-runtime:$work_version"
    // optional - Test helpers
    androidTestImplementation "android.arch.work:work-testing:$work_version"

    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.8'
}
